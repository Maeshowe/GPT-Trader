#!/usr/bin/env python3
"""
Firm prompt futtat√°sa:
‚Ä¢ GPT-score kinyer√©se
‚Ä¢ SHAP-szer≈± feature-hat√°sok kisz√°m√≠t√°sa (fix line√°ris s√∫lyokkal)
‚Ä¢ Eredm√©ny vissza√≠r√°sa inputs/firm_inputs.json-be
"""

import os, json, re
from pathlib import Path
from dotenv import load_dotenv
from jinja2 import Template
from openai import OpenAI

# ‚îÄ‚îÄ Be√°ll√≠t√°sok --------------------------------------------------------------
BASE = Path(__file__).resolve().parent
load_dotenv(override=True)
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
MODEL  = os.getenv("OPENAI_MODEL", "gpt-4o")

# ‚îÄ‚îÄ 1) Bemenet ---------------------------------------------------------------
firm_path = BASE / "inputs/firm_inputs.json"
firm_records = json.load(open(firm_path))

# Itt p√©ldak√©nt csak a legfrissebb 1. rekordot dolgozzuk fel; v√©gig is iter√°lhatn√°l.
rec = firm_records[0]

# ‚îÄ‚îÄ 2) Prompt renderel√©s -----------------------------------------------------
prompt = Template(open(BASE / "prompts/firm_prompt.j2").read()).render(**rec)

resp = client.chat.completions.create(
    model=MODEL,
    messages=[{"role": "user", "content": prompt}],
    temperature=0,
    max_tokens=700
).choices[0].message.content.strip()

print("üßæ GPT-v√°lasz (Firm):\n", resp)

# ‚îÄ‚îÄ 3) Score kinyer√©se -------------------------------------------------------
m = re.search(r"Score:\s*(\d+)", resp)
rec["firm_score"] = int(m.group(1)) if m else None

# ‚îÄ‚îÄ 4) SHAP-szer≈± magyar√°zat (fix s√∫lyok) ------------------------------------
feature_weights = {
    "P/E": 0.20,
    "PEG": -0.10,
    "Beta": -0.10,
    "ROE": 0.40,
    "Quick Ratio": 0.30
}
fin = rec["firm_financials_json"]
rec["firm_shap"] = {
    k: round(feature_weights[k] * fin.get(k, 0), 2) for k in feature_weights
}

# ‚îÄ‚îÄ 5) Vissza√≠r√°s a JSON-list√°ba -------------------------------------------
firm_records[0] = rec
json.dump(firm_records, open(firm_path, "w"), indent=2)
print(f"‚úÖ firm_score ({rec['firm_score']}), SHAP-√©rt√©kek mentve a {firm_path} f√°jlba")